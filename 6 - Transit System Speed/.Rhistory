bus_times$inferred_route_id
raw_bus_times$inferred_route_id
# Load libraries
library(tidyverse);library(lubridate);library(hrbrthemes)
library(janitor)
# Read in MBTA headway csv data file
raw_bus_times <- read.csv(file = "./MTA-Bus-Time_.2014-10-08.txt",
head = TRUE,sep = "\t", stringsAsFactors = FALSE)
library(tidyverse);library(lubridate);library(hrbrthemes)
library(janitor)
# Read in MBTA headway csv data file
unzip(file = "./MTA-Bus-Time_.2014-10-08.txt.xz")
library(tidyverse);library(lubridate);library(hrbrthemes)
library(janitor)
# Read in MBTA headway csv data file
untar(file = "./MTA-Bus-Time_.2014-10-08.txt.xz")
library(tidyverse);library(lubridate);library(hrbrthemes)
library(janitor)
# Read in MBTA headway csv data file
untar(tarfile = "./MTA-Bus-Time_.2014-10-08.txt.xz")
library(tidyverse);library(lubridate);library(hrbrthemes)
library(janitor)
# Read in MBTA headway csv data file
unzip(zipfile = "./MTA-Bus-Time_.2014-10-08.txt.xz")
# Load libraries
library(tidyverse);library(lubridate);library(hrbrthemes)
library(janitor)
# Read in MBTA headway csv data file
raw_bus_times <- read.csv(file = "./MTA-Bus-Time_.2014-10-08.txt",
head = TRUE,sep = "\t", stringsAsFactors = FALSE)
grep("_BX", raw_bus_times$inferred_route_id)
raw_bus_times$inferred_route_id
grepl("_BX", raw_bus_times$inferred_route_id)
# Load libraries
library(tidyverse);library(lubridate);library(hrbrthemes)
library(janitor)
# Read in MBTA headway csv data file
raw_bus_times <- read.csv(file = "./MTA-Bus-Time_.2014-10-08.txt",
head = TRUE, sep = "\t", stringsAsFactors = FALSE)
# Select Bronx buses in route, remove columns of data we don't need
bus_times <- raw_bus_times %>%
filter(inferred_phase == "IN_PROGRESS", grepl("_BX", inferred_route_id)) %>%
select(time_received, vehicle_id, distance_along_trip,
inferred_direction_id, inferred_route_id, inferred_trip_id)
# Create a POSIXct date and time variable using available data
# Select Peak time 07:00 EST (11:00 UTC) to 10:00 EST (14:00 UTC)
bus_times<- bus_times %>%
mutate(time_received = as.POSIXct(time_received , format = "%Y-%m-%d %H:%M:%S")) %>%
filter(hour(time_received) >= 11 & hour(time_received) < 14)
data.table(speed)
data.table::data.table(speed)
speed <- bus_times %>%
select(inferred_trip_id,
inferred_route_id,
time_received,
"max_distance" = distance_along_trip)
speed_min_distance <- bus_times %>%
select(inferred_trip_id,
"time" = time_received,
"min_distance" = distance_along_trip)
data.table::data.table(speed)
# Create and format our analysis data frame
speed <- bus_times %>%
select(inferred_trip_id,
inferred_route_id,
time_received,
"max_distance" = distance_along_trip) %>%
group_by(inferred_trip_id) %>%
arrange(desc(max_distance)) %>%
slice(1) %>%
ungroup()
speed_min_distance <- bus_times %>%
select(inferred_trip_id,
"time" = time_received,
"min_distance" = distance_along_trip) %>%
group_by(inferred_trip_id) %>%
arrange(min_distance) %>%
slice(1) %>%
ungroup()
# Join speed and min_speed on inferred_trip_id
speed <- left_join(speed, speed_min_distance, by = "inferred_trip_id")
View(speed)
speed<- speed %>%
mutate(time_diff = time_received - time,
distance = max_distance - min_distance)
# Remove any rows which the time difference or distance travelled is zero
speed <- speed %>%
filter(time_diff > 0, distance > 0) %>%
mutate(m_per_sec = distance / as.numeric(time_diff),
mph = m_per_sec * 2.237) # meters per second to miles per hour = 1:2.23694
# Find of average (mean) speed from all the trips of each individual route
average_speed <- speed %>%
group_by(inferred_route_id) %>%
summarize(avg_mph = mean(mph, na.rm = TRUE))
View(average_speed)
speedplot <- ggplot(speed, aes(x = time_received, y = mph)) +
geom_line() +
facet_wrap(~inferred_route_id, ncol = 10) +
theme_ipsum()
speedplot
speedplot <- ggplot(speed, aes(x = time_received, y = mph)) +
geom_line() +
facet_wrap(~inferred_route_id, ncol = 10) +
theme_ipsum()
speedplot
ggplot(speed, aes(x = time_received, y = mph)) +
geom_line() +
facet_wrap(~inferred_route_id, ncol = 10)
speedplot <- ggplot(speed %>% filter(mph < 30), aes(x = time_received, y = mph)) +
geom_line() +
facet_wrap(~inferred_route_id, ncol = 10) +
theme_ipsum() +
ggtitle("Average Speeds for MTA Bronx Buses from 7am-10am 2014-10-08")
speedplot
ggplot(speed %>% filter(mph < 30), aes(x = time_received, y = mph)) +
geom_line() +
facet_wrap(~inferred_route_id, ncol = 10) +
theme_ipsum() +
ggtitle("Average Speeds for MTA Bronx Buses from 7am-10am 2014-10-08")
download.file(url = "http://web.mta.info/developers/data/nyct/turnstile/turnstile_171111.txt",
destfile = "C:/Users/shconne2/Documents/Misc/Open Transit Data Toolkit/7 - Subway Turnstile Data")
library(tidyverse);library(lubridate);library(hrbrthemes)
library(janitor)
# Read in MBTA turnstile csv data file
raw_turnstile <- read.csv(file = "./turnstile_171111.txt",
head = TRUE, sep = "\t", stringsAsFactors = FALSE)
# Load libraries
library(tidyverse);library(lubridate);library(hrbrthemes)
library(janitor)
options(stringsAsFactors = FALSE)
# Read in MBTA headway csv data file
raw_bus_times <- read.csv(file = "./MTA-Bus-Time_.2014-10-08.txt",
head = TRUE, sep = "\t", stringsAsFactors = FALSE)
saveRDS(raw_bus_times, file = "./MTA-Bus-Time_2014-10-08.rds")
test <- readRDS(file = "./MTA-Bus-Time_2014-10-08.rds")
bus_times <- raw_bus_times %>%
filter(inferred_phase == "IN_PROGRESS", grepl("_BX", inferred_route_id)) %>%
select(time_received, vehicle_id, distance_along_trip,
inferred_direction_id, inferred_route_id, inferred_trip_id)
saveRDS(bus_times, file = "./MTA-Bus-Time_2014-10-08_Bronx.rds")
test <- readRDS(file = "./MTA-Bus-Time_2014-10-08_Bronx.rds")
source('C:/Users/sconn/Downloads/Open Transit Data Toolkit/6 - Transit System Speed/06-speed.R', echo=TRUE)
View(speed)
speed %>% janitor::tabyl(inferred_route_id)
speed %>%
mutate(inferred_route_id = str_remove(inferred_route_id, "^(MTA NYCT_|MTABC_)")) %>%
janitor::tabyl(inferred_route_id)
speedplot <- speed %>%
mutate(inferred_route_id = str_remove(inferred_route_id, "^(MTA NYCT_|MTABC_)")) %>%
ggplot(., aes(x = time_received, y = mph)) +
geom_line() +
facet_wrap(~inferred_route_id, ncol = 10) +
theme_ipsum()
speedplot
speedplot <- speed %>%
filter(mph < 30) %>%
mutate(inferred_route_id = str_remove(inferred_route_id, "^(MTA NYCT_|MTABC_)")) %>%
ggplot(., aes(x = time_received, y = mph)) +
geom_line() +
facet_wrap(~inferred_route_id, ncol = 10) +
theme_ipsum() +
ggtitle("Average Speeds for MTA Bronx Buses from 7am-10am 2014-10-08")
speedplot
